    struct GematriaLetter *F = new_GematriaLetter(0, 'F', 'ᚠ', 2, 109, 'ᛠ', 'EA', 20);
    struct GematriaLetter *U = new_GematriaLetter(1, 'U', 'ᚢ', 3, 107, 'ᛡ', 'IA', 20);
    struct GematriaLetter *TH = new_GematriaLetter(2, 'TH', 'ᚦ', 5, 103, 'ᚣ', 'Y', 20);
    struct GematriaLetter *O = new_GematriaLetter(3, 'O', 'ᚩ', 7, 101, 'ᚫ', 'AE', 20);
    struct GematriaLetter *R = new_GematriaLetter(4, 'R', 'ᚱ', 11, 97, 'ᚪ', 'A', 20);
    
    struct GematriaLetter *C = new_GematriaLetter(5, 'C', 'ᚳ', 13, 89, 'ᛞ', 'D', 20);
    struct GematriaLetter *K = new_GematriaLetter(5, 'K', 'ᚳ', 13, 89, 'ᛞ', 'D', 20);
    
    struct GematriaLetter *G = new_GematriaLetter(6, 'G', 'ᚷ', 17, 83, 'ᛟ', 'OE', 20);
    struct GematriaLetter *W = new_GematriaLetter(7, 'W', 'ᚹ', 19, 79, 'ᛝ', 'NG', 20);
    struct GematriaLetter *H = new_GematriaLetter(8, 'H', 'ᚻ', 23, 73, 'ᛚ', 'L', 20);
    struct GematriaLetter *N = new_GematriaLetter(9, 'N', 'ᚾ', 29, 71, 'ᛗ', 'M', 20);
    struct GematriaLetter *I = new_GematriaLetter(10, 'I', 'ᛁ', 31, 67, 'ᛖ', 'E', 20);
    struct GematriaLetter *J = new_GematriaLetter(11, 'J', 'ᛂ', 37, 61, 'ᛒ', 'B', 20);
    struct GematriaLetter *EO = new_GematriaLetter(12, 'EO', 'ᛇ', 41, 59, 'ᛏ', 'T', 20);
    struct GematriaLetter *P = new_GematriaLetter(13, 'P', 'ᛈ', 43, 53, 'ᛋ', 'S', 20);
    struct GematriaLetter *X = new_GematriaLetter(14, 'X', 'ᛉ', 47, 47, 'ᛉ', 'X', 20);
    
    struct GematriaLetter *S = new_GematriaLetter(15, 'S', 'ᛋ', 53, 43, 'ᛈ', 'P', 20);
    struct GematriaLetter *Z = new_GematriaLetter(15, 'Z', 'ᛋ', 53, 43, 'ᛈ', 'P', 20);
    
    struct GematriaLetter *T = new_GematriaLetter(16, 'T', 'ᛏ', 59, 41, 'ᛇ', 'EO', 20);
    struct GematriaLetter *B = new_GematriaLetter(17, 'B', 'ᛒ', 61, 37, 'ᛂ', 'J', 20);
    struct GematriaLetter *E = new_GematriaLetter(18, 'E', 'ᛖ', 67, 31, 'ᛁ', 'I', 20);
    struct GematriaLetter *M = new_GematriaLetter(19, 'M', 'ᛗ', 71, 29, 'ᚾ', 'N', 20);
    struct GematriaLetter *L = new_GematriaLetter(20, 'L', 'ᛚ', 73, 23, 'ᚻ', 'H', 20);
    
    struct GematriaLetter *NG = new_GematriaLetter(21, 'NG', 'ᛝ', 79, 19, 'ᚹ', 'W', 20);
    struct GematriaLetter *ING = new_GematriaLetter(21, 'ING', 'ᛝ', 79, 19, 'ᚹ', 'W', 20);
    
    struct GematriaLetter *OE = new_GematriaLetter(22, 'OE', 'ᛟ', 83, 17, 'ᚷ', 'G', 20);
    struct GematriaLetter *D = new_GematriaLetter(23, 'D', 'ᛞ', 89, 13, 'ᚳ', 'C', 20);
    struct GematriaLetter *A = new_GematriaLetter(24, 'A', 'ᚪ', 97, 11, 'ᚱ', 'R', 20);
    struct GematriaLetter *AE = new_GematriaLetter(25, 'AE', 'ᚫ', 101, 7, 'ᚩ', 'O', 20);
    struct GematriaLetter *Y = new_GematriaLetter(26, 'Y', 'ᚣ', 103, 5, 'ᚦ', 'TH', 20);
    
    struct GematriaLetter *IA = new_GematriaLetter(27, 'IA', 'ᛡ', 107, 3, 'ᚢ', 'U', 20);
    struct GematriaLetter *IO = new_GematriaLetter(27, 'IO', 'ᛡ', 107, 3, 'ᚢ', 'U', 20);
    
    struct GematriaLetter *EA = new_GematriaLetter(28, 'EA', 'ᛠ', 109, 2, 'ᚠ', 'F', 20);


    void init_gematria_alphabet()
{
    // initialize the alphabet
    gemAlphabet = (struct GematriaLetter *)malloc(sizeof(struct GematriaLetter) * 33); // 29

    /*
        "ᚠ", "ᚢ", "ᚦ", "ᚩ", "ᚱ", "ᚳ", "ᚷ", "ᚹ", "ᚻ", "ᚾ", "ᛁ", "ᛂ", "ᛇ", "ᛈ", "ᛉ", "ᛋ", "ᛏ",
        "ᛒ", "ᛖ", "ᛗ", "ᛚ", "ᛝ", "ᛟ", "ᛞ", "ᚪ", "ᚫ", "ᚣ", "ᛡ", "ᛠ"
    */

    // fill the alphabet
    struct GematriaLetter *F = new_GematriaLetter(0, "F", '\u16A0', 2, 109, '\u16E0', "EA", 20);
    struct GematriaLetter *U = new_GematriaLetter(1, "U", '\u16A2', 3, 107, '\u16E1', "IA", 20);
    struct GematriaLetter *TH = new_GematriaLetter(2, "TH", '\u16A6', 5, 103, '\u16A3', "Y", 20);
    struct GematriaLetter *O = new_GematriaLetter(3, "O", '\u16A9', 7, 101, '\u16AB', "AE", 20);
    struct GematriaLetter *R = new_GematriaLetter(4, "R", '\u16B1', 11, 97, '\u16AA', "A", 20);
    struct GematriaLetter *C = new_GematriaLetter(5, "C", '\u16f6', 13, 89, '\u16de', "D", 20);
    struct GematriaLetter *K = new_GematriaLetter(5, "K", '\u16f6', 13, 89, '\u16de', "D", 20);
    struct GematriaLetter *G = new_GematriaLetter(6, "G", '\u16f7', 17, 83, '\u16df', "OE", 20);
    struct GematriaLetter *W = new_GematriaLetter(7, "W", '\u16f9', 19, 79, '\u16dc', "NG", 20);
    struct GematriaLetter *H = new_GematriaLetter(8, "H", '\u16fb', 23, 73, '\u16da', "L", 20);
    struct GematriaLetter *N = new_GematriaLetter(9, "N", '\u16fe', 29, 71, '\u16d7', "M", 20);
    struct GematriaLetter *I = new_GematriaLetter(10, "I", '\u1681', 31, 67, '\u16d6', "E", 20);
    struct GematriaLetter *J = new_GematriaLetter(11, "J", '\u1682', 37, 61, '\u16d2', "B", 20);
    struct GematriaLetter *EO = new_GematriaLetter(12, "EO", '\u1687', 41, 59, '\u16cf', "T", 20);
    struct GematriaLetter *P = new_GematriaLetter(13, "P", '\u1688', 43, 53, '\u16cb', "S", 20);

    struct GematriaLetter *F = new_GematriaLetter(0, 'F', 'ᚠ', 2, 109, 'ᛠ', 'EA', 20);
    struct GematriaLetter *U = new_GematriaLetter(1, 'U', 'ᚢ', 3, 107, 'ᛡ', 'IA', 20);
    struct GematriaLetter *TH = new_GematriaLetter(2, 'TH', 'ᚦ', 5, 103, 'ᚣ', 'Y', 20);
    struct GematriaLetter *O = new_GematriaLetter(3, 'O', 'ᚩ', 7, 101, 'ᚫ', 'AE', 20);
    struct GematriaLetter *R = new_GematriaLetter(4, 'R', 'ᚱ', 11, 97, 'ᚪ', 'A', 20);
    struct GematriaLetter *C = new_GematriaLetter(5, 'C', 'ᚳ', 13, 89, 'ᛞ', 'D', 20);
    struct GematriaLetter *K = new_GematriaLetter(5, 'K', 'ᚳ', 13, 89, 'ᛞ', 'D', 20);
    struct GematriaLetter *G = new_GematriaLetter(6, 'G', 'ᚷ', 17, 83, 'ᛟ', 'OE', 20);
    struct GematriaLetter *W = new_GematriaLetter(7, 'W', 'ᚹ', 19, 79, 'ᛝ', 'NG', 20);
    struct GematriaLetter *H = new_GematriaLetter(8, 'H', 'ᚻ', 23, 73, 'ᛚ', 'L', 20);
    struct GematriaLetter *N = new_GematriaLetter(9, 'N', 'ᚾ', 29, 71, 'ᛗ', 'M', 20);
    struct GematriaLetter *I = new_GematriaLetter(10, 'I', 'ᛁ', 31, 67, 'ᛖ', 'E', 20);
    struct GematriaLetter *J = new_GematriaLetter(11, 'J', 'ᛂ', 37, 61, 'ᛒ', 'B', 20);
    struct GematriaLetter *EO = new_GematriaLetter(12, 'EO', 'ᛇ', 41, 59, 'ᛏ', 'T', 20);
    struct GematriaLetter *P = new_GematriaLetter(13, 'P', 'ᛈ', 43, 53, 'ᛋ', 'S', 20);
    struct GematriaLetter *X = new_GematriaLetter(14, 'X', 'ᛉ', 47, 47, 'ᛉ', 'X', 20);
    struct GematriaLetter *S = new_GematriaLetter(15, 'S', 'ᛋ', 53, 43, 'ᛈ', 'P', 20);
    struct GematriaLetter *Z = new_GematriaLetter(15, 'Z', 'ᛋ', 53, 43, 'ᛈ', 'P', 20);
    struct GematriaLetter *T = new_GematriaLetter(16, 'T', 'ᛏ', 59, 41, 'ᛇ', 'EO', 20);
    struct GematriaLetter *B = new_GematriaLetter(17, 'B', 'ᛒ', 61, 37, 'ᛂ', 'J', 20);
    struct GematriaLetter *E = new_GematriaLetter(18, 'E', 'ᛖ', 67, 31, 'ᛁ', 'I', 20);
    struct GematriaLetter *M = new_GematriaLetter(19, 'M', 'ᛗ', 71, 29, 'ᚾ', 'N', 20);
    struct GematriaLetter *L = new_GematriaLetter(20, 'L', 'ᛚ', 73, 23, 'ᚻ', 'H', 20);
    struct GematriaLetter *NG = new_GematriaLetter(21, 'NG', 'ᛝ', 79, 19, 'ᚹ', 'W', 20);
    struct GematriaLetter *ING = new_GematriaLetter(21, 'ING', 'ᛝ', 79, 19, 'ᚹ', 'W', 20);
    struct GematriaLetter *OE = new_GematriaLetter(22, 'OE', 'ᛟ', 83, 17, 'ᚷ', 'G', 20);
    struct GematriaLetter *D = new_GematriaLetter(23, 'D', 'ᛞ', 89, 13, 'ᚳ', 'C', 20);
    struct GematriaLetter *A = new_GematriaLetter(24, 'A', 'ᚪ', 97, 11, 'ᚱ', 'R', 20);
    struct GematriaLetter *AE = new_GematriaLetter(25, 'AE', 'ᚫ', 101, 7, 'ᚩ', 'O', 20);
    struct GematriaLetter *Y = new_GematriaLetter(26, 'Y', 'ᚣ', 103, 5, 'ᚦ', 'TH', 20);
    struct GematriaLetter *IA = new_GematriaLetter(27, 'IA', 'ᛡ', 107, 3, 'ᚢ', 'U', 20);
    struct GematriaLetter *IO = new_GematriaLetter(27, 'IO', 'ᛡ', 107, 3, 'ᚢ', 'U', 20);
    struct GematriaLetter *EA = new_GematriaLetter(28, 'EA', 'ᛠ', 109, 2, 'ᚠ', 'F', 20);

    // Initialize actual aplhabet array
    gemAlphabet[0] = *F;
    gemAlphabet[1] = *U;
    gemAlphabet[2] = *TH;
    gemAlphabet[3] = *O;
    gemAlphabet[4] = *R;
    gemAlphabet[5] = *C;
    gemAlphabet[6] = *K;
    gemAlphabet[7] = *G;
    gemAlphabet[8] = *W;
    gemAlphabet[9] = *H;
    gemAlphabet[10] = *N;
    gemAlphabet[11] = *I;
    gemAlphabet[12] = *J;
    gemAlphabet[13] = *EO;
    gemAlphabet[14] = *P;
    gemAlphabet[15] = *X;
    gemAlphabet[16] = *S;
    gemAlphabet[17] = *Z;
    gemAlphabet[18] = *T;
    gemAlphabet[19] = *B;
    gemAlphabet[20] = *E;
    gemAlphabet[21] = *M;
    gemAlphabet[22] = *L;
    gemAlphabet[23] = *NG;
    gemAlphabet[24] = *ING;
    gemAlphabet[25] = *OE;
    gemAlphabet[26] = *D;
    gemAlphabet[27] = *A;
    gemAlphabet[28] = *AE;
    gemAlphabet[29] = *Y;
    gemAlphabet[30] = *IA;
    gemAlphabet[31] = *IO;
    gemAlphabet[32] = *EA;

    // Free memory
    free(F);
    free(U);
    free(TH);
    free(O);
    free(R);
    free(C);
    free(K);
    free(G);
    free(W);
    free(H);
    free(N);
    free(I);
    free(J);
    free(EO);
    free(P);
    free(X);
    free(S);
    free(Z);
    free(T);
    free(B);
    free(E);
    free(M);
    free(L);
    free(NG);
    free(ING);
    free(OE);
    free(D);
    free(A);
    free(AE);
    free(Y);
    free(IA);
    free(IO);
    free(EA);
}
